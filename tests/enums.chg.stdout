expr @ 5:24 5:25 => Unnested
expr @ 5:37 5:38 => Unnested
expr @ 5:13 5:39 => Unnested[2]
expr @ 6:43 6:44 => NestedKind
expr @ 6:25 6:46 => {v: NestedKind}
expr @ 6:66 6:67 => NestedKind
expr @ 6:48 6:69 => {v: NestedKind}
expr @ 6:24 6:70 => {v: NestedKind}[2]
expr @ 4:11 8:1 => ()



define void @main() {
prologue:
%l.0 = alloca [2 x i8]
%l.2 = alloca [2 x {i8}]
br label %bb.0

bb.0:
%t.0 = alloca [2 x i8]
%t.1 = getelementptr [2 x i8], [2 x i8]* %t.0, i32 0, i32 0
store i8 0, i8* %t.1
%t.2 = getelementptr [2 x i8], [2 x i8]* %t.0, i32 0, i32 1
store i8 1, i8* %t.2
%l.1 = load [2 x i8], [2 x i8]* %t.0
store [2 x i8] %l.1, [2 x i8]* %l.0
%t.3 = alloca [2 x {i8}]
%t.4 = alloca {i8}
%p.5 = getelementptr {i8}, {i8}* %t.4, i32 0, i32 0
store i8 0, i8* %p.5
%t.6 = load {i8}, {i8}* %t.4
%t.7 = getelementptr [2 x {i8}], [2 x {i8}]* %t.3, i32 0, i32 0
store {i8} %t.6, {i8}* %t.7
%t.8 = alloca {i8}
%p.9 = getelementptr {i8}, {i8}* %t.8, i32 0, i32 0
store i8 1, i8* %p.9
%t.10 = load {i8}, {i8}* %t.8
%t.11 = getelementptr [2 x {i8}], [2 x {i8}]* %t.3, i32 0, i32 1
store {i8} %t.10, {i8}* %t.11
%l.3 = load [2 x {i8}], [2 x {i8}]* %t.3
store [2 x {i8}] %l.3, [2 x {i8}]* %l.2
ret void

}


