expr @ 2:14 2:15 => i32
expr @ 2:17 2:18 => i32
expr @ 2:20 2:21 => i32
expr @ 2:23 2:24 => i32
expr @ 2:26 2:27 => i32
expr @ 2:29 2:30 => i32
expr @ 2:32 2:33 => i32
expr @ 2:13 2:34 => i32[7]
expr @ 3:14 3:15 => i32
expr @ 3:13 3:20 => i32[10]
expr @ 4:14 4:15 => u64
expr @ 4:12 4:13 => i32[7]
expr @ 4:12 4:19 => i32
expr @ 4:24 4:25 => u64
expr @ 4:22 4:23 => i32[10]
expr @ 4:22 4:29 => i32
expr @ 4:12 4:29 => i32
expr @ 4:5 4:29 => never
expr @ 1:16 6:1 => ()



define i32 @main() {
prologue:
%l.0 = alloca i32
%l.1 = alloca [7 x i32]
%l.3 = alloca [10 x i32]
br label %bb.0

bb.0:
%t.0 = alloca [7 x i32]
%t.1 = getelementptr [7 x i32], [7 x i32]* %t.0, i32 0, i32 0
store i32 1, i32* %t.1
%t.2 = getelementptr [7 x i32], [7 x i32]* %t.0, i32 0, i32 1
store i32 2, i32* %t.2
%t.3 = getelementptr [7 x i32], [7 x i32]* %t.0, i32 0, i32 2
store i32 3, i32* %t.3
%t.4 = getelementptr [7 x i32], [7 x i32]* %t.0, i32 0, i32 3
store i32 4, i32* %t.4
%t.5 = getelementptr [7 x i32], [7 x i32]* %t.0, i32 0, i32 4
store i32 5, i32* %t.5
%t.6 = getelementptr [7 x i32], [7 x i32]* %t.0, i32 0, i32 5
store i32 6, i32* %t.6
%t.7 = getelementptr [7 x i32], [7 x i32]* %t.0, i32 0, i32 6
store i32 7, i32* %t.7
%l.2 = load [7 x i32], [7 x i32]* %t.0
store [7 x i32] %l.2, [7 x i32]* %l.1
%t.8 = alloca [10 x i32]
%t.9 = alloca i32
br label %bt.10
bt.10:
%t.13 = load i32, i32* %t.9
%t.14 = icmp ult i32 %t.13, 10
br i1 %t.14, label %bt.11, label %bt.12
bt.11:
%t.16 = load i32, i32* %t.9
%t.15 = getelementptr [10 x i32], [10 x i32]* %t.8, i32 0, i32 %t.16
store i32 5, i32* %t.15
%t.17 = add i32 %t.16, 1
store i32 %t.17, i32* %t.9
br label %bt.10
bt.12:
%l.4 = load [10 x i32], [10 x i32]* %t.8
store [10 x i32] %l.4, [10 x i32]* %l.3
%t.18 = getelementptr [7 x i32], [7 x i32]* %l.1, i32 0, i32 5
%l.5 = load i32, i32* %t.18
%t.19 = getelementptr [10 x i32], [10 x i32]* %l.3, i32 0, i32 3
%l.6 = load i32, i32* %t.19
%l.7 = add i32 %l.5, %l.6
store i32 %l.7, i32* %l.0
%ret.20 = load i32, i32* %l.0
ret i32 %ret.20

}


