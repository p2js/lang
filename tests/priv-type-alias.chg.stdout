expr @ 4:18 4:19 => T
expr @ 4:24 4:25 => T
expr @ 4:12 4:27 => {x: T,y: T}
expr @ 4:5 4:27 => never
expr @ 3:37 6:0 => ()
expr @ 8:18 8:19 => i32
expr @ 8:24 8:25 => i32
expr @ 8:12 8:27 => {x: i32,y: i32}
expr @ 8:5 8:27 => never
expr @ 7:29 10:0 => ()
expr @ 12:12 12:19 => fn mkPoint(...)
expr @ 12:20 12:21 => i32
expr @ 12:23 12:24 => i32
expr @ 12:12 12:25 => Point<i32>
expr @ 12:12 12:27 => i32
expr @ 12:30 12:40 => fn notAllowed(...)
expr @ 12:30 12:42 => Point<i32>
expr @ 12:30 12:44 => i32
expr @ 12:12 12:44 => i32
expr @ 12:5 12:44 => never
expr @ 11:16 14:1 => ()



define {i32, i32} @root$mkPoint$LT$i32$GT$(i32 %lt.1, i32 %lt.2) {
prologue:
%l.0 = alloca {i32, i32}
%l.1 = alloca i32
%l.2 = alloca i32
store i32 %lt.1, i32* %l.1
store i32 %lt.2, i32* %l.2
br label %bb.0

bb.0:
%l.3 = load i32, i32* %l.1
%l.4 = load i32, i32* %l.2
%t.0 = alloca {i32, i32}
%p.1 = getelementptr {i32, i32}, {i32, i32}* %t.0, i32 0, i32 0
store i32 %l.3, i32* %p.1
%p.2 = getelementptr {i32, i32}, {i32, i32}* %t.0, i32 0, i32 1
store i32 %l.4, i32* %p.2
%t.3 = load {i32, i32}, {i32, i32}* %t.0
store {i32, i32} %t.3, {i32, i32}* %l.0
%ret.4 = load {i32, i32}, {i32, i32}* %l.0
ret {i32, i32} %ret.4

}

define {i32, i32} @root$notAllowed() {
prologue:
%l.0 = alloca {i32, i32}
br label %bb.0

bb.0:
%t.0 = alloca {i32, i32}
%p.1 = getelementptr {i32, i32}, {i32, i32}* %t.0, i32 0, i32 0
store i32 1, i32* %p.1
%p.2 = getelementptr {i32, i32}, {i32, i32}* %t.0, i32 0, i32 1
store i32 2, i32* %p.2
%t.3 = load {i32, i32}, {i32, i32}* %t.0
store {i32, i32} %t.3, {i32, i32}* %l.0
%ret.4 = load {i32, i32}, {i32, i32}* %l.0
ret {i32, i32} %ret.4

}

define i32 @main() {
prologue:
%l.0 = alloca i32
br label %bb.0

bb.0:
%l.1 = call {i32, i32} @root$mkPoint$LT$i32$GT$(i32 1, i32 2)
br label %bb.1

bb.1:
%t.0 = alloca {i32, i32}
store {i32, i32} %l.1, {i32, i32}* %t.0
%t.1 = getelementptr {i32, i32}, {i32, i32}* %t.0, i32 0, i32 0
%l.2 = load i32, i32* %t.1
%l.3 = call {i32, i32} @root$notAllowed()
br label %bb.2

bb.2:
%t.2 = alloca {i32, i32}
store {i32, i32} %l.3, {i32, i32}* %t.2
%t.3 = getelementptr {i32, i32}, {i32, i32}* %t.2, i32 0, i32 1
%l.4 = load i32, i32* %t.3
%l.5 = add i32 %l.2, %l.4
store i32 %l.5, i32* %l.0
%ret.4 = load i32, i32* %l.0
ret i32 %ret.4

}


