fallback @ 21:13 21:14
fallback @ 22:17 22:18
fallback @ 23:17 23:18
fallback @ 26:25 26:26
expr @ 2:31 2:32 => E
expr @ 2:21 2:32 => never
expr @ 2:19 3:0 => ()
expr @ 4:32 4:33 => E
expr @ 4:22 4:33 => never
expr @ 4:20 5:0 => ()
expr @ 10:17 10:19 => fn f1(...)
expr @ 10:17 10:21 => ()
expr @ 9:21 12:0 => ()
expr @ 12:13 12:15 => fn f2(...)
expr @ 12:13 12:17 => ()
expr @ 8:17 14:0 => ()
expr @ 15:13 16:0 => ()
expr @ 19:11 19:13 => fn f3(...)
expr @ 19:11 19:15 => ()
expr @ 20:17 20:19 => fn f1(...)
expr @ 20:17 20:21 => ()
expr @ 21:13 21:14 => i32
expr @ 22:13 22:14 => i32
expr @ 22:17 22:18 => i32
expr @ 22:13 22:18 => i32
expr @ 23:13 23:14 => i32
expr @ 23:17 23:18 => i32
expr @ 23:13 23:18 => i32
expr @ 24:11 24:12 => i32
expr @ 26:21 26:22 => i32
expr @ 26:25 26:26 => i32
expr @ 26:21 26:26 => i32
expr @ 25:14 28:0 => ()
expr @ 24:5 29:0 => ()
expr @ 18:11 30:1 => ()



define void @f3() {
prologue:
br label %bb.0

bb.0:
ret void

}

define void @f2() {
prologue:
br label %bb.0

bb.0:
%l.0 = call {} bitcast(void()* @f1 to {}()*)()
br label %bb.1

bb.1:
ret void

}

define void @f1() {
prologue:
br label %bb.0

bb.0:
%l.0 = call {} bitcast(void()* @f2 to {}()*)()
br label %bb.1

bb.1:
ret void

}

define void @main() {
prologue:
%l.2 = alloca i32
%l.3 = alloca i32
%l.6 = alloca i32
%l.9 = alloca i32
%l.11 = alloca i32
br label %bb.0

bb.0:
%l.0 = call {} bitcast(void()* @f3 to {}()*)()
br label %bb.1

bb.1:
%l.1 = call {} bitcast(void()* @f1 to {}()*)()
br label %bb.2

bb.2:
store i32 1, i32* %l.2
%l.4 = load i32, i32* %l.2
%l.5 = add i32 %l.4, 1
store i32 %l.5, i32* %l.3
%l.7 = load i32, i32* %l.3
%l.8 = add i32 %l.7, 2
store i32 %l.8, i32* %l.6
br label %bb.3

bb.3:
br label %bb.4

bb.4:
%l.10 = load i32, i32* %l.6
store i32 %l.10, i32* %l.9
%l.12 = load i32, i32* %l.6
%l.13 = add i32 %l.12, 3
store i32 %l.13, i32* %l.11
br label %bb.5

bb.5:
ret void

}


