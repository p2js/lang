type V<T> = { value: T };

impl<T> V<T> {
  fn foo(self*): T* { return &(*self).value; }
  fn bar<X>(self, x: X) {}
}
fn free<T>(s: V<T>*) {}

fn main(): i32 {
  let v: V<i32> = .{ value: 42 };
  free(&v);
  V::<i32>::foo(&v);
  V::foo(&v);
  v.bar(42);
  return *(&v).foo();
}
