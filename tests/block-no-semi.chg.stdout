fallback @ 6:6 6:7
fallback @ 7:14 7:15
fallback @ 7:23 7:24
fallback @ 8:6 8:7
fallback @ 9:15 9:16
fallback @ 9:24 9:25
fallback @ 9:29 9:30
fallback @ 10:22 10:23
fallback @ 10:31 10:32
fallback @ 11:7 11:8
fallback @ 11:13 11:14
expr @ 2:5 2:7 => ()
expr @ 3:5 3:7 => ()
expr @ 4:5 5:0 => ()
expr @ 5:8 5:12 => bool
expr @ 5:13 6:0 => ()
expr @ 5:5 6:0 => ()
expr @ 6:6 6:7 => i32
expr @ 6:5 6:7 => i32
expr @ 7:8 7:12 => bool
expr @ 7:14 7:15 => i32
expr @ 7:13 7:16 => i32
expr @ 7:23 7:24 => i32
expr @ 7:22 8:0 => i32
expr @ 7:5 8:0 => i32
expr @ 8:6 8:7 => i32
expr @ 8:5 8:7 => i32
expr @ 9:9 9:13 => bool
expr @ 9:15 9:16 => i32
expr @ 9:14 9:17 => i32
expr @ 9:24 9:25 => i32
expr @ 9:23 9:26 => i32
expr @ 9:6 9:26 => i32
expr @ 9:29 9:30 => i32
expr @ 9:6 9:30 => i32
expr @ 10:16 10:20 => bool
expr @ 10:22 10:23 => i32
expr @ 10:21 10:24 => i32
expr @ 10:31 10:32 => i32
expr @ 10:30 10:33 => i32
expr @ 10:13 10:33 => i32
expr @ 11:7 11:8 => i32
expr @ 11:6 11:9 => i32
expr @ 11:13 11:14 => i32
expr @ 11:11 11:14 => i32
expr @ 1:11 13:1 => ()



define void @main() {
prologue:
%l.1 = alloca i32
%l.4 = alloca i32
%l.7 = alloca i32
%l.8 = alloca i32
br label %bb.0

bb.0:
br i1 true, label %bb.1, label %bb.2

bb.1:
br label %bb.2

bb.2:
%l.0 = sub i32 0, 1
br i1 true, label %bb.3, label %bb.4

bb.3:
store i32 1, i32* %l.1
br label %bb.5

bb.4:
store i32 2, i32* %l.1
br label %bb.5

bb.5:
%l.2 = load i32, i32* %l.1
%l.3 = sub i32 0, 3
br i1 true, label %bb.6, label %bb.7

bb.6:
store i32 1, i32* %l.4
br label %bb.8

bb.7:
store i32 2, i32* %l.4
br label %bb.8

bb.8:
%l.5 = load i32, i32* %l.4
%l.6 = add i32 %l.5, 3
br i1 true, label %bb.9, label %bb.10

bb.9:
store i32 1, i32* %l.8
br label %bb.11

bb.10:
store i32 2, i32* %l.8
br label %bb.11

bb.11:
%l.9 = load i32, i32* %l.8
store i32 %l.9, i32* %l.7
%l.10 = sub i32 0, 1
ret void

}


