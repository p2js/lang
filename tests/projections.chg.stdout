expr @ 5:23 6:0 => ()
expr @ 6:22 7:0 => ()
expr @ 10:12 10:19 => extern "intrinsic" fn bitcast(...)
expr @ 10:20 10:21 => i32*
expr @ 10:12 10:22 => V*
expr @ 10:5 10:22 => never
expr @ 9:26 12:0 => ()
expr @ 14:14 14:15 => i32
expr @ 14:13 14:17 => (i32)
expr @ 15:16 15:17 => (i32)
expr @ 15:15 15:17 => (i32)*
expr @ 15:14 15:19 => ((i32)*)
expr @ 15:21 15:22 => (i32)
expr @ 15:20 15:22 => (i32)*
expr @ 15:13 15:23 => (((i32)*), (i32)*)
expr @ 16:15 16:16 => (((i32)*), (i32)*)
expr @ 16:14 16:16 => (((i32)*), (i32)*)*
expr @ 16:19 16:20 => (i32)
expr @ 16:18 16:20 => (i32)*
expr @ 16:13 16:21 => ((((i32)*), (i32)*)*, (i32)*)
expr @ 17:23 17:25 => i32
expr @ 17:9 17:10 => ((((i32)*), (i32)*)*, (i32)*)
expr @ 17:9 17:12 => (((i32)*), (i32)*)*
expr @ 17:8 17:12 => (((i32)*), (i32)*)
expr @ 17:8 17:15 => ((i32)*)
expr @ 17:8 17:17 => (i32)*
expr @ 17:6 17:17 => (i32)
expr @ 17:6 17:20 => i32
expr @ 17:6 17:25 => ()
expr @ 19:13 19:14 => i32
expr @ 20:14 20:22 => fn i32_as_v(...)
expr @ 20:24 20:25 => i32
expr @ 20:23 20:25 => i32*
expr @ 20:14 20:26 => V*
expr @ 21:5 21:7 => V*
expr @ 21:5 21:10 => i32
expr @ 22:5 22:13 => fn i32_as_v(...)
expr @ 22:15 22:16 => i32
expr @ 22:14 22:16 => i32*
expr @ 22:5 22:17 => V*
expr @ 22:5 22:20 => i32
expr @ 23:5 23:7 => V*
expr @ 23:5 23:19 => ()
expr @ 24:5 24:13 => fn i32_as_v(...)
expr @ 24:15 24:16 => i32
expr @ 24:14 24:16 => i32*
expr @ 24:5 24:17 => V*
expr @ 24:5 24:29 => ()
expr @ 25:5 25:7 => V*
expr @ 25:5 25:16 => ()
expr @ 27:16 27:17 => ((((i32)*), (i32)*)*, (i32)*)
expr @ 27:16 27:19 => (((i32)*), (i32)*)*
expr @ 27:15 27:19 => (((i32)*), (i32)*)
expr @ 27:15 27:22 => ((i32)*)
expr @ 27:15 27:24 => (i32)*
expr @ 27:13 27:24 => (i32)
expr @ 27:13 27:27 => i32
expr @ 27:32 27:33 => ((((i32)*), (i32)*)*, (i32)*)
expr @ 27:32 27:35 => (i32)*
expr @ 27:31 27:35 => (i32)
expr @ 27:31 27:38 => i32
expr @ 27:13 27:38 => i32
expr @ 27:5 27:38 => never
expr @ 13:16 29:1 => ()



define {i32}* @root$i32_as_v(i32* %lt.1) {
prologue:
%l.0 = alloca {i32}*
%l.1 = alloca i32*
store i32* %lt.1, i32** %l.1
br label %bb.0

bb.0:
%l.3 = load i32*, i32** %l.1
%t.0 = alloca i32*
store i32* %l.3, i32** %t.0
%t.1 = bitcast i32** %t.0 to {i32}**
%l.2 = load {i32}*, {i32}** %t.1
store {i32}* %l.2, {i32}** %l.0
%ret.2 = load {i32}*, {i32}** %l.0
ret {i32}* %ret.2

}

define void @root$V$by_value({i32} %lt.0) {
prologue:
%l.0 = alloca {i32}
store {i32} %lt.0, {i32}* %l.0
br label %bb.0

bb.0:
ret void

}

define void @root$V$by_ref({i32}* %lt.0) {
prologue:
%l.0 = alloca {i32}*
store {i32}* %lt.0, {i32}** %l.0
br label %bb.0

bb.0:
ret void

}

define i32 @main() {
prologue:
%l.0 = alloca i32
%l.1 = alloca {i32}
%l.2 = alloca {{{i32}*}, {i32}*}
%l.5 = alloca {{{{i32}*}, {i32}*}*, {i32}*}
%l.8 = alloca i32
%l.9 = alloca {i32}*
br label %bb.0

bb.0:
%t.0 = alloca {i32}
%p.1 = getelementptr {i32}, {i32}* %t.0, i32 0, i32 0
store i32 1, i32* %p.1
%t.2 = load {i32}, {i32}* %t.0
store {i32} %t.2, {i32}* %l.1
%l.3 = bitcast {i32}* %l.1 to {i32}*
%l.4 = bitcast {i32}* %l.1 to {i32}*
%t.5 = alloca {{i32}*}
%p.6 = getelementptr {{i32}*}, {{i32}*}* %t.5, i32 0, i32 0
store {i32}* %l.3, {i32}** %p.6
%t.7 = load {{i32}*}, {{i32}*}* %t.5
%t.3 = alloca {{{i32}*}, {i32}*}
%p.4 = getelementptr {{{i32}*}, {i32}*}, {{{i32}*}, {i32}*}* %t.3, i32 0, i32 0
store {{i32}*} %t.7, {{i32}*}* %p.4
%p.8 = getelementptr {{{i32}*}, {i32}*}, {{{i32}*}, {i32}*}* %t.3, i32 0, i32 1
store {i32}* %l.4, {i32}** %p.8
%t.9 = load {{{i32}*}, {i32}*}, {{{i32}*}, {i32}*}* %t.3
store {{{i32}*}, {i32}*} %t.9, {{{i32}*}, {i32}*}* %l.2
%l.6 = bitcast {{{i32}*}, {i32}*}* %l.2 to {{{i32}*}, {i32}*}*
%l.7 = bitcast {i32}* %l.1 to {i32}*
%t.10 = alloca {{{{i32}*}, {i32}*}*, {i32}*}
%p.11 = getelementptr {{{{i32}*}, {i32}*}*, {i32}*}, {{{{i32}*}, {i32}*}*, {i32}*}* %t.10, i32 0, i32 0
store {{{i32}*}, {i32}*}* %l.6, {{{i32}*}, {i32}*}** %p.11
%p.12 = getelementptr {{{{i32}*}, {i32}*}*, {i32}*}, {{{{i32}*}, {i32}*}*, {i32}*}* %t.10, i32 0, i32 1
store {i32}* %l.7, {i32}** %p.12
%t.13 = load {{{{i32}*}, {i32}*}*, {i32}*}, {{{{i32}*}, {i32}*}*, {i32}*}* %t.10
store {{{{i32}*}, {i32}*}*, {i32}*} %t.13, {{{{i32}*}, {i32}*}*, {i32}*}* %l.5
%t.14 = getelementptr {{{{i32}*}, {i32}*}*, {i32}*}, {{{{i32}*}, {i32}*}*, {i32}*}* %l.5, i32 0, i32 0
%t.15 = load {{{i32}*}, {i32}*}*, {{{i32}*}, {i32}*}** %t.14
%t.16 = getelementptr {{{i32}*}, {i32}*}, {{{i32}*}, {i32}*}* %t.15, i32 0, i32 0
%t.17 = getelementptr {{i32}*}, {{i32}*}* %t.16, i32 0, i32 0
%t.18 = load {i32}*, {i32}** %t.17
%t.19 = getelementptr {i32}, {i32}* %t.18, i32 0, i32 0
store i32 42, i32* %t.19
store i32 1, i32* %l.8
%l.11 = bitcast i32* %l.8 to i32*
%l.10 = call {i32}* @root$i32_as_v(i32* %l.11)
br label %bb.1

bb.1:
store {i32}* %l.10, {i32}** %l.9
%l.13 = bitcast i32* %l.8 to i32*
%l.12 = call {i32}* @root$i32_as_v(i32* %l.13)
br label %bb.2

bb.2:
%t.20 = load {i32}*, {i32}** %l.9
%l.14 = load {i32}, {i32}* %t.20
%l.15 = call {} bitcast(void({i32})* @root$V$by_value to {}({i32})*)({i32} %l.14)
br label %bb.3

bb.3:
%l.17 = bitcast i32* %l.8 to i32*
%l.16 = call {i32}* @root$i32_as_v(i32* %l.17)
br label %bb.4

bb.4:
%t.21 = alloca {i32}*
store {i32}* %l.16, {i32}** %t.21
%t.22 = load {i32}*, {i32}** %t.21
%l.18 = load {i32}, {i32}* %t.22
%l.19 = call {} bitcast(void({i32})* @root$V$by_value to {}({i32})*)({i32} %l.18)
br label %bb.5

bb.5:
%l.20 = load {i32}*, {i32}** %l.9
%l.21 = call {} bitcast(void({i32}*)* @root$V$by_ref to {}({i32}*)*)({i32}* %l.20)
br label %bb.6

bb.6:
%t.23 = getelementptr {{{{i32}*}, {i32}*}*, {i32}*}, {{{{i32}*}, {i32}*}*, {i32}*}* %l.5, i32 0, i32 0
%t.24 = load {{{i32}*}, {i32}*}*, {{{i32}*}, {i32}*}** %t.23
%t.25 = getelementptr {{{i32}*}, {i32}*}, {{{i32}*}, {i32}*}* %t.24, i32 0, i32 0
%t.26 = getelementptr {{i32}*}, {{i32}*}* %t.25, i32 0, i32 0
%t.27 = load {i32}*, {i32}** %t.26
%t.28 = getelementptr {i32}, {i32}* %t.27, i32 0, i32 0
%l.22 = load i32, i32* %t.28
%t.29 = getelementptr {{{{i32}*}, {i32}*}*, {i32}*}, {{{{i32}*}, {i32}*}*, {i32}*}* %l.5, i32 0, i32 1
%t.30 = load {i32}*, {i32}** %t.29
%t.31 = getelementptr {i32}, {i32}* %t.30, i32 0, i32 0
%l.23 = load i32, i32* %t.31
%l.24 = add i32 %l.22, %l.23
store i32 %l.24, i32* %l.0
%ret.32 = load i32, i32* %l.0
ret i32 %ret.32

}


