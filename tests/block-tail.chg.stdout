expr @ 2:13 2:14 => i64
expr @ 2:19 2:20 => i64
expr @ 2:17 2:22 => i64
expr @ 2:13 2:22 => i64
expr @ 3:12 3:13 => i64
expr @ 3:26 3:27 => i64
expr @ 3:29 3:30 => i64
expr @ 3:16 3:32 => i64
expr @ 3:12 3:32 => i64
expr @ 3:5 3:32 => never
expr @ 1:16 5:1 => ()



define i64 @main() {
prologue:
%l.0 = alloca i64
%l.1 = alloca i64
%l.4 = alloca i64
br label %bb.0

bb.0:
%l.2 = add i64 1, 2
store i64 %l.2, i64* %l.1
%l.3 = load i64, i64* %l.1
store i64 3, i64* %l.4
%l.5 = load i64, i64* %l.4
%l.6 = mul i64 %l.3, %l.5
store i64 %l.6, i64* %l.0
%ret.0 = load i64, i64* %l.0
ret i64 %ret.0

}


