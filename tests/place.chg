fn place<T>(x: T*): T* { return x; }

fn main(): i32 {
    let x = .{ a: 1 };
    x.a = x.a + 1;

    // op-assign operators with side-effect places
    let v = 2;
    *place(&v) = 4;
    *place(&v) += 4;
    *place(&v) -= 4;
    *place(&v) *= 4;
    *place(&v) /= 4;
    *place(&v) %= 4;

    return x.a;
}
