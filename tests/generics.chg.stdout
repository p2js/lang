expr @ 1:40 1:41 => T
expr @ 1:33 1:41 => never
expr @ 1:31 2:0 => void
expr @ 3:44 3:45 => i32
expr @ 3:48 3:49 => i32
expr @ 3:44 3:49 => i32
expr @ 3:37 3:49 => never
expr @ 3:35 4:0 => void
expr @ 6:12 6:15 => fn add(...)
expr @ 6:16 6:24 => fn identity(...)
expr @ 6:25 6:27 => i32
expr @ 6:30 6:38 => fn identity(...)
expr @ 6:39 6:40 => i32
expr @ 6:12 6:42 => i32
expr @ 6:5 6:42 => never
expr @ 5:22 8:1 => void
expr @ 6:30 6:41 => i32
expr @ 6:16 6:28 => i32
test

define i32 @identity$LT$i32$GT$(i32 %lt.1) {
prologue:
%l.0 = alloca i32
%l.1 = alloca i32
store i32 %lt.1, i32* %l.1
br label %bb.0

bb.0:
%l.2 = load i32, i32* %l.1
store i32 %l.2, i32* %l.0
%ret.0 = load i32, i32* %l.0
ret i32 %ret.0

}

define i32 @add(i32 %lt.1, i32 %lt.2) {
prologue:
%l.0 = alloca i32
%l.1 = alloca i32
%l.2 = alloca i32
store i32 %lt.1, i32* %l.1
store i32 %lt.2, i32* %l.2
br label %bb.0

bb.0:
%l.3 = load i32, i32* %l.1
%l.4 = load i32, i32* %l.2
%l.5 = add i32 %l.3, %l.4
store i32 %l.5, i32* %l.0
%ret.0 = load i32, i32* %l.0
ret i32 %ret.0

}

define i32 @main() {
prologue:
%l.0 = alloca i32
br label %bb.0

bb.0:
%l.2 = call i32 @identity$LT$i32$GT$(i32 40)
br label %bb.1

bb.1:
%l.3 = call i32 @identity$LT$i32$GT$(i32 2)
br label %bb.2

bb.2:
%l.1 = call i32 @add(i32 %l.2, i32 %l.3)
br label %bb.3

bb.3:
store i32 %l.1, i32* %l.0
%ret.0 = load i32, i32* %l.0
ret i32 %ret.0

}


