use root::std::string::String;
use root::std::cstr::CString;
use root::std::vec::Vec;
use root::std::ptr;
use root::std::libc;
use root::std::intrinsics::ext;

fn read_to_string(path: str*): String {
    let c_path = CString::from_str(path);
    let fd = libc::open(c_path.ptr, 0);
    if fd < 0 {
        root::std::fatal("failed to open file");
    }
  
    let contents = String::new();

    while true {
        let buf = [0u8; 1024];
        let bytes_read = libc::read(fd, ptr::cast::<u8[1024], i8>(&buf), 1024);
        if bytes_read == 0 {
            break;
        }

        let i = 0;
        while i < bytes_read {
            (&contents).push_byte(buf[ext(i)]);
            i += 1;
        }
    }
  
    return contents;
}
